{"version":3,"sources":["Pages/Error.js","context.js","Pages/Note.js","Pages/Notes.js","Components/Guide.js","img/hero.png","Components/Hero.js","Components/CustomCards.js","Components/SingleFeature.js","Components/Featurette.js","img/inwork.png","Components/Topics.js","Components/ModalComp.js","Components/HomeModal.js","Pages/Home.js","Pages/Course.js","Pages/Article.js","Components/Navigation.js","App.js","index.js"],"names":["Error","Container","Badge","bg","to","Button","cognitiveDistortionCourse","courseTitle","courseDescription","courseArticles","id","title","imgLink","engName","description","examples","AppContext","React","createContext","AppProvider","children","useState","localStorage","getItem","JSON","parse","notes","setNotes","courses","setCourses","useEffect","setItem","stringify","Provider","value","deleteCards","deleteSingleCard","filter","note","noteID","useGlobalContext","useContext","Note","setNote","useParams","newNote","find","titleValue","triggerValue","emotionValue","emotionPowerValue","automaticThoughtsValue","cognitiveDistortionsValue","challengeThoughtsValue","alternativeThoughtsValue","console","log","className","Row","Col","xl","map","distortion","index","text","Notes","fluid","xs","md","Card","Header","Body","Text","class","variant","size","as","Link","onClick","length","Guide","titleField","useRef","triggerField","emotionField","emotionPowerField","automaticThoughtsField","challengeThoughtsField","alternativeThoughtsField","history","useHistory","checkedDistortions","setCheckedDistortions","Form","onSubmit","e","preventDefault","current","Date","getTime","toString","push","Group","controlId","Label","Control","type","placeholder","ref","style","height","FloatingLabel","label","Select","Range","min","max","name","example","Check","Hero","Image","src","hero","alt","loading","CustomCards","backgroundImage","width","SingleFeature","titleMuted","para","imageLeft","img","lg","rounded","Featurette","featuresContent","feature","Topics","workImg","Accordion","defaultActiveKey","Item","eventKey","ModalComp","show","setShow","handleClose","Modal","onHide","closeButton","Title","Footer","HomeModal","Home","Course","course","article","Img","Article","sm","Navigation","Navbar","expand","Brand","Toggle","Collapse","Nav","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c5e1263.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Badge, Button } from 'react-bootstrap'\r\n\r\nconst Error = () => {\r\n    return (\r\n        <Container>\r\n            <h1>\r\n                Упс! Ошибочка вышла.  <Badge bg=\"danger\">Сорян :(</Badge>\r\n            </h1>\r\n            <Link to=\"/\"><Button>Назад домой</Button></Link>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React, { useState, useContext } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst getLocalStorage = () => {\r\n    let notes = localStorage.getItem('notes');\r\n    if (notes) {\r\n        return JSON.parse(localStorage.getItem('notes'));\r\n    } else {\r\n        return []\r\n    }\r\n\r\n};\r\n\r\nconst cognitiveDistortionCourse = {\r\n    courseTitle: 'Когнитивные искажения',\r\n    courseDescription: 'Когнитивное искажение — это систематические ошибки в мышлении. Под воздействием когнитивных искажений формируется «субъективная социальная реальность», которая влияет на поведение человека. Умение определять когнитивные искажения и очищать от них свои мысли помогает значительно снизить количество и силу негативных эмоций. ',\r\n    courseArticles: [\r\n        {\r\n            id: 'Catastrophizing',\r\n            title: 'Катастрофизация',\r\n            imgLink: 'https://images.pexels.com/photos/6246136/pexels-photo-6246136.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\r\n            engName: 'Magnification (Catastrophizing) / Minimization / Binocular Trick',\r\n            description: 'Когда человек преувеличивает или приуменьшает значение, важность и вероятность событий. ',\r\n            examples: ['«Если я начну играть в футбол — я обязательно сломаю ногу.»', 'Спортсмен, который обычно хорошо выступает, допускает ошибку и делает вывод, что он отвратительный участник команды', 'Спортсмен получает значимую награду, но преуменьшает ее значение и продолжает верить в то, что он посредственный игрок. ']\r\n        },\r\n        {\r\n            id: 'Black-and-white-thinking',\r\n            title: 'Черно-белое мышление',\r\n            imgLink: 'https://images.unsplash.com/photo-1472566316349-bce77aa2a778?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80',\r\n            engName: 'All-or-Nothing Thinking / Polarized Thinking / Black-and-White Thinking',\r\n            description: 'Когда человек в своей оценке впадает в крайности и оценивает объект либо как совершенно восхитительный, либо как совершенно ужасный и исключает из восприятия множество оттенков серого. ',\r\n            examples: ['«Я всегда проваливаюсь, когда пробую делать что-то новое»', 'Женщина съедает ложку мороженого. Она считает себя полной неудачницей из-за нарушения диеты. В конце концов съедает целое ведро мороженого']\r\n        },\r\n        {\r\n            id: 'Emotional-Reasoning',\r\n            title: 'Эмоциональное рассуждение',\r\n            imgLink: 'https://images.pexels.com/photos/6199708/pexels-photo-6199708.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\r\n            engName: 'Emotional Reasoning',\r\n            description: 'Когда человек приравнивает свои эмоции к фактам: «Я чувствую, что это так, следовательно, это правда»',\r\n            examples: ['«Я испуган, следовательно, у меня паническая атака»', '«Если я чувствую себя глупым, значит я глупый»']\r\n        },\r\n        {\r\n            id: 'Magnification-of-negative',\r\n            title: 'Усиление негатива',\r\n            imgLink: 'https://images.pexels.com/photos/4178738/pexels-photo-4178738.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\r\n            engName: 'Magnification of negative',\r\n            description: 'Когда человек уделяет чрезмерное внимание возможным неудачам, слабостям или угрозам ',\r\n            examples: ['«Во время презентации я допустил пару ошибок и чувствую себя неловко из-за того, что напортачил»', '«Если я откликнусь на эту вакансию мне точно откажут»']\r\n        },\r\n        {\r\n            id: 'Minimization-of-the-positive',\r\n            title: 'Минимизация позитива',\r\n            imgLink: 'https://images.unsplash.com/photo-1582079768176-2f3305fe11f4?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80',\r\n            engName: 'Minimization of the positive',\r\n            description: 'Когда человек уделяет недостаточное внимание своим актуальным и потенциальным успехам, возможностям, сильным сторонам',\r\n            examples: ['«Хотя они сделали комплимент моей внешности, наверняка, сказали это из вежливости. На самом деле, я выгляжу ужасно»', '«Ну да, я сделал этот проект, но можно было сделать намного лучше»']\r\n        },\r\n        {\r\n            id: 'Fortune-Telling',\r\n            title: 'Поспешные выводы и предсказание будущего',\r\n            imgLink: 'https://images.unsplash.com/photo-1611721323888-279a6b09960f?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80',\r\n            engName: 'Jumping to Conclusions / Fortune Telling',\r\n            description: 'Когда человек склонен делать выводы и прогнозы, основанные на незначительных доказательствах или их отсутствии, и считающие их истиной в последней истанции.  ',\r\n            examples: ['«Я не понравлюсь ей, что бы я ни делал»', '«Я никогда не поправлюсь и всегда буду в депрессии»', 'Одинокая женщина уверена, что никогда не найдет любви, не будет иметь преданных и счастливых отношений, только на основании того факта, что она еще не нашла таких отношений']\r\n        },\r\n        {\r\n            id: 'Mind-Reading',\r\n            title: 'Чтение мыслей',\r\n            imgLink: 'https://images.unsplash.com/photo-1531537571171-a707bf2683da?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=967&q=80',\r\n            engName: 'Jumping to Conclusions / Mind Reading',\r\n            description: 'Когда человек уверен, что знает, о чем думают другие люди. Например, предполагает, что, поскольку он сидит за обедом один, все остальные думают, что он неудачник. Это может стать самоисполняющимя пророчеством — он не инициирует социальный контакт из-за своего страха, и из-за этого окружающие воспринимают его негативно.',\r\n            examples: ['«У человека неприятное выражение лица, потому что он плохо обо мне думает»', '«Соседка со мной не поздоровалась. Я абсолютно уверен, что она меня ненавидит»']\r\n        },\r\n        {\r\n            id: 'Overgeneralization',\r\n            title: 'Чрезмерное обобщение',\r\n            imgLink: 'https://images.unsplash.com/photo-1527137342181-19aab11a8ee8?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80',\r\n            engName: 'Generalising / Categorising / Overgeneralization',\r\n            description: 'Когда однажды случилось что-то плохое, человек ожидает, что это будет происходить снова и снова. Чрезмерное обобщение может привести к чрезмерно негативным мыслям о себе и своем окружении, основанным только на одном или двух переживаниях.',\r\n            examples: ['«Я проиграл в теннисном матче, значит теннис — не для меня»', '«Я получил тройку на экзамене, значит я провалился, я неудачник»', 'Молодую женщину приглашают на первое свидание, но не зовут на второе. Она в отчаянии говорит подруге: «со мной всегда так! Я никогда не найду любви!»', 'Одинокая женщина проводит большую часть своего времени дома. Друзья иногда приглашают ее на ужин и знакомят с новыми людьми. Она чувствует, что эти попытки бесполезны. На самом деле, она никому не понравится. И вообще, все люди одинаковые — они мелочные и эгоистичные.']\r\n        },\r\n        {\r\n            id: 'Personalization',\r\n            title: 'Обвинение себя',\r\n            imgLink: 'https://images.unsplash.com/photo-1520206319821-0496cfdeb31e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80',\r\n            engName: 'Personalization / Blaming',\r\n            description: 'Когда человек принимает все на личный счет и приписывает себе вину за ситуации, где нет логических оснований полагать, что виноват именно он. ',\r\n            examples: ['«Из-за моего опоздания он не уследил за приготовлением еды»', '«Они в плохом настроении, потому что я их раздражаю»', '«Из-за меня другу не понравилась вечеринка».']\r\n        },\r\n        {\r\n            id: 'Blaming',\r\n            title: 'Обвинение других',\r\n            imgLink: 'https://images.pexels.com/photos/6383206/pexels-photo-6383206.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\r\n            engName: 'Personalization / Blaming',\r\n            description: 'Когда человек склонен обвинять других людей в том, как устроена его жизнь: это X виноват, что у них проблемы с самооценкой, это Y виноват, что они чувствуют себя подавленными, это Z виноват, что все пошло не по плану.',\r\n            examples: ['«Мой босс виноват, что я не получил повышение»', '«Власть виновата, что я так плохо живу»', '«Из-за мужа у меня проблемы с самооценкой»', '«Мои родители нанесли мне травму и теперь у меня панические атаки из-за них»']\r\n        }\r\n    ]\r\n}\r\n\r\n\r\nconst AppContext = React.createContext();\r\n\r\n// const url = 'https://spreadsheets.google.com/feeds/cells/1EWnNdrY6GIjxPb6LOAMvr4mePyIDqaJ4Ph1D4qcLDeE/od6/public/basic?alt=json';\r\n\r\nconst AppProvider = ({ children }) => {\r\n    const [notes, setNotes] = useState(getLocalStorage());\r\n    const [courses, setCourses] = useState([cognitiveDistortionCourse]);\r\n\r\n    // const fetchData = async () => {\r\n    //     try {\r\n    //         const response = await fetch(url);\r\n    //         const data = await response.json();\r\n    //         console.log(data)\r\n    //     } catch (error) {\r\n    //         console.log(error);\r\n    //     }\r\n    // }\r\n\r\n    // useEffect(() => { fetchData() }, [url, fetchData]);\r\n\r\n    const deleteCards = () => {\r\n        setNotes([]);\r\n    }\r\n\r\n    const deleteSingleCard = id => {\r\n        setNotes(notes.filter(note => note.noteID !== id))\r\n    }\r\n\r\n    useEffect(() => { localStorage.setItem('notes', JSON.stringify(notes)) }, [notes]);\r\n\r\n\r\n    // useEffect(() => setCourses([cognitiveDistortionCourse]), [])\r\n\r\n    return <AppContext.Provider value={{ notes, setNotes, deleteCards, deleteSingleCard, courses, setCourses, cognitiveDistortionCourse }}> {children} </AppContext.Provider>\r\n};\r\n\r\nexport const useGlobalContext = () => useContext(AppContext);\r\n\r\nexport { AppContext, AppProvider };","import React, { useState, useEffect } from 'react'\r\nimport { useGlobalContext } from '../context';\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Container, Row, Col, Button, Card, Badge } from \"react-bootstrap\";\r\n\r\n\r\n\r\nconst Note = () => {\r\n    const { notes } = useGlobalContext();\r\n    const [note, setNote] = useState('')\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        const newNote = notes.find(note => note.noteID === id);\r\n        setNote(newNote)\r\n    }, [])\r\n\r\n    if (note) {\r\n        const { noteID, titleValue, triggerValue, emotionValue, emotionPowerValue, automaticThoughtsValue, cognitiveDistortionsValue, challengeThoughtsValue, alternativeThoughtsValue } = note;\r\n        console.log(cognitiveDistortionsValue);\r\n        return (\r\n            <Container className=\"my-5 px-4 px-sm-5 \">\r\n                <Row>\r\n                    <Col xl={7}>\r\n                        <h1>{titleValue}</h1>\r\n                        <div className=\"my-3\">\r\n                            <Badge bg=\"info\">{emotionValue}</Badge>\r\n                            <Badge bg=\"info\" className=\"mx-3\">{emotionPowerValue}/10</Badge>\r\n                        </div>\r\n                        <div className=\"my-3\">\r\n                            {cognitiveDistortionsValue.map((distortion, index) =>\r\n                                <Badge bg=\"light\" text=\"dark\" key={index}>{distortion}</Badge>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"my-3\">\r\n                            <h5>Описание ситуации</h5>\r\n                            <p>{triggerValue}</p>\r\n                        </div>\r\n                        <div className=\"my-3\">\r\n                            <h5>Автоматические мысли</h5>\r\n                            <p>{automaticThoughtsValue}</p>\r\n                        </div>\r\n                        <div className=\"my-3\">\r\n                            <h5>Челлендж автоматических мыслей</h5>\r\n                            <p>{challengeThoughtsValue}</p>\r\n                        </div>\r\n                        <div className=\"my-3\">\r\n                            <h5>Альтернативные мысли</h5>\r\n                            <p>{alternativeThoughtsValue}</p>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container >\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className=\"text-center\">Пока вы не сделали ни одной заметки</h1>\r\n        </Container >\r\n    )\r\n\r\n}\r\n\r\nexport default Note;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Row, Col, Button, Card } from \"react-bootstrap\";\r\nimport Note from './Note';\r\nimport { useGlobalContext } from \"../context\";\r\n\r\nconst Notes = () => {\r\n    const { notes, deleteCards, deleteSingleCard } = useGlobalContext();\r\n    return (\r\n        <Container>\r\n            <h1 className=\"mt-5 text-center\">\r\n                Мои записи\r\n            </h1>\r\n            <Container fluid className=\"my-4\">\r\n                <Row xs={1} md={3} xl={4} className=\"g-4\">\r\n                    {notes.map((note) => {\r\n                        return (\r\n                            <Col key={note.noteID}>\r\n                                <Card>\r\n                                    <Card.Header>{note.titleValue}</Card.Header>\r\n                                    <Card.Body>\r\n\r\n                                        <Card.Text>{note.triggerValue}</Card.Text>\r\n                                        <div class=\"d-grid\">\r\n                                            <Button variant=\"outline-primary\" size=\"sm\" className=\"mt-2\" as={Link} to={`/mental-tools/note/${note.noteID}`} >Читать описание</Button>\r\n                                            <Button variant=\"outline-danger\" size=\"sm\" className=\"mt-2\" onClick={() => deleteSingleCard(note.noteID)}>Удалить</Button>\r\n                                        </div>\r\n\r\n\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        )\r\n                    })}\r\n                </Row>\r\n                <Row md={3} className=\"justify-content-center\">\r\n                    {notes.length ? <Button variant=\"outline-danger\" onClick={deleteCards}>Удалить все записи</Button> : <p className=\"mt-3\">К сожалению, вы еще не сделали ни одной записи :( </p>}\r\n                </Row>\r\n\r\n            </Container>\r\n\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Notes\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Form, Button, FloatingLabel } from \"react-bootstrap\";\r\nimport { useGlobalContext } from \"../context\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Note from \"../Pages/Note\";\r\nimport Notes from \"../Pages/Notes\";\r\n\r\nconst Guide = () => {\r\n    const { notes, setNotes } = useGlobalContext();\r\n    const titleField = React.useRef('');\r\n    const triggerField = React.useRef('');\r\n    const emotionField = React.useRef('');\r\n    const emotionPowerField = React.useRef('');\r\n    const automaticThoughtsField = React.useRef('');\r\n    const challengeThoughtsField = React.useRef('');\r\n    const alternativeThoughtsField = React.useRef('');\r\n\r\n    let history = useHistory();\r\n\r\n\r\n    const cognitiveDistortions = [\r\n        { name: 'Катастрофизация', example: 'Что если случится худшее?' },\r\n        { name: 'Черно-белое мышление', example: 'Я полный неудачник' },\r\n        { name: 'Эмоциональное рассуждение', example: 'Я так чувствую, стало быть это правда' },\r\n        { name: 'Усиление негатива', example: 'Я абсолютно все загубил ' },\r\n        { name: 'Минимизация позитива', example: 'Они так сказали просто из вежливости' },\r\n        { name: 'Поспешные выводы', example: 'Она со мной не поздаровалась, следовательно, она меня ненавидит' },\r\n        { name: 'Предсказание будущего', example: 'Я наверняка провалю мой экзамен' },\r\n        { name: 'Чтение мыслей', example: 'Он не хотел со мной говорить' },\r\n        { name: 'Обвинение себя', example: 'Это все я виноват' },\r\n        { name: 'Обвинение других', example: 'Это они во всем виноваты' }\r\n    ];\r\n\r\n    // store active checkboxes values (instead of useRef)\r\n    const [checkedDistortions, setCheckedDistortions] = useState([]);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n\r\n        const [titleValue, triggerValue, emotionValue, emotionPowerValue, automaticThoughtsValue, cognitiveDistortionsValue, challengeThoughtsValue, alternativeThoughtsValue] = [titleField.current.value, triggerField.current.value, emotionField.current.value, emotionPowerField.current.value, automaticThoughtsField.current.value, checkedDistortions, challengeThoughtsField.current.value, alternativeThoughtsField.current.value]\r\n        const noteID = new Date().getTime().toString();\r\n        const newNote = { noteID, titleValue, triggerValue, emotionValue, emotionPowerValue, automaticThoughtsValue, cognitiveDistortionsValue, challengeThoughtsValue, alternativeThoughtsValue }\r\n        setNotes([...notes, newNote]);\r\n\r\n        history.push(`/mental-tools/note/${noteID}`)\r\n\r\n    }\r\n\r\n    return (\r\n        <Container className=\"d-flex flex-column align-items-center justify-content-center my-5\">\r\n\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group className=\"mb-3\" controlId=\"trigger\">\r\n                    <Form.Label>Ситуация/Триггер</Form.Label>\r\n                    <Form.Control type=\"Text\" placeholder=\"Что случилось?\" ref={titleField} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"trigger\">\r\n                    <Form.Label>Описание ситуации</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        placeholder=\"Изложите факты о ситуации\"\r\n                        style={{ height: '80px' }}\r\n                        ref={triggerField}\r\n                    />\r\n                    {/* <Form.Control type=\"Text\" placeholder=\"Изложите факты о ситуации\" ref={triggerField} /> */}\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"emotion\">\r\n                    <Form.Label>Эмоция</Form.Label>\r\n                    <FloatingLabel label=\"Что вы почувствовали?\">\r\n                        <Form.Select aria-label=\"Emotions select\" ref={emotionField}>\r\n                            <option>Выберите самую яркую эмоцию</option>\r\n                            <option value=\"Anger\">Гнев, возмущение</option>\r\n                            <option value=\"Anxiety\">Страх, тревога</option>\r\n                            <option value=\"Depression\">Грусть, разочарование</option>\r\n                            <option value=\"Guilt\">Вина, сожаление</option>\r\n                            <option value=\"Shame\">Стыд, смущение</option>\r\n                            <option value=\"Happiness\">Радость, возбуждение</option>\r\n                            <option value=\"Love\">Любовь, благодарность</option>\r\n                        </Form.Select>\r\n                    </FloatingLabel>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"emotion-power\">\r\n                    <Form.Label>Сила эмоции</Form.Label>\r\n                    <Form.Range min=\"1\" max=\"10\" ref={emotionPowerField} />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"automatic-thoughts\">\r\n                    <Form.Label>Автоматические мысли</Form.Label>\r\n\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        placeholder=\"Напишите мысли, которые возникли у вас в этой ситуации\"\r\n                        style={{ height: '80px' }}\r\n                        ref={automaticThoughtsField}\r\n                    />\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"my-4\" controlId=\"cognitive-distortions\">\r\n\r\n                    <Form.Label className=\"d-block\">Когнитивные искажения</Form.Label>\r\n                    <Form.Text>Выберите те когнитивные искажения, которые вы нашли в своих автоматических мыслях:</Form.Text>\r\n                    <Container className=\"mt-3\">\r\n                        {/* <Form.Check type=\"checkbox\" id={`${cognitiveDistortions[0].name}`} label={`${cognitiveDistortions[0].name}`} ref={cognitiveDistortionsField} />\r\n                        <Form.Text>{cognitiveDistortions[0].example}</Form.Text> */}\r\n                        {cognitiveDistortions.map((distortion, index) =>\r\n                            <div key={`key-${distortion.name}`} className=\"mb-3\">\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id={`${distortion.name}`}\r\n                                    label={`${distortion.name}`}\r\n                                    // check what will be if i click and then click again and fix if bug\r\n                                    onClick={() => {\r\n                                        setCheckedDistortions([...checkedDistortions, distortion.name]);\r\n                                    }}\r\n                                />\r\n                                <Form.Text>{distortion.example}</Form.Text>\r\n\r\n\r\n                            </div>\r\n                        )}\r\n                    </Container>\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"challenge-thoughts\">\r\n                    <Form.Label>Челлендж автоматических мыслей</Form.Label>\r\n\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        placeholder=\"Перечислите факты, опровергающие эти мысли\"\r\n                        style={{ height: '80px' }}\r\n                        ref={challengeThoughtsField}\r\n                    />\r\n\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"alternative-thoughts\">\r\n                    <Form.Label>Альтернативные мысли</Form.Label>\r\n\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        placeholder=\"Напишите, как можно более реалистично и гибко подумать о ситуации\"\r\n                        style={{ height: '80px' }}\r\n                        ref={alternativeThoughtsField}\r\n                    />\r\n\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n\r\n\r\n\r\n            </Form>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Guide;","export default __webpack_public_path__ + \"static/media/hero.3a74258c.png\";","// import { Row, Col, Button } from 'react-bootstrap';\r\nimport Image from 'react-bootstrap/Image';\r\nimport hero from '../img/hero.png';\r\n\r\nconst Hero = () => {\r\n\r\n    return (\r\n        <div className=\"container col-xxl-8 px-4 py-5\">\r\n            <div className=\"row flex-lg-row-reverse align-items-center g-5 py-5\">\r\n                <div className=\"col-10 col-sm-8 col-lg-6\">\r\n                    <Image src={hero} fluid alt=\"Girl sitting with laptop\" loading=\"lazy\"></Image>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                    <h1 className=\"display-5 fw-bold lh-1 mb-3\">Тренируй свои гибкие навыки</h1>\r\n                    <p className=\"lead\">SoftSkillz — образовательная онлайн-платформа, которая помогает развивать гибкие навыки с помощью интерактивных упражнений и материалов. </p>\r\n                    <div className=\"d-grid gap-2 d-md-flex justify-content-md-start\">\r\n                        <button type=\"button\" className=\"btn btn-primary btn-lg px-4 me-md-2\">Попробовать</button>\r\n                        <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4\">Узнать больше</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Hero;","import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst CustomCards = () => {\r\n    return (\r\n        <div className=\"container px-4 py-5\" id=\"custom-cards\">\r\n            <h2 className=\"pb-2 border-bottom\">Модули платформы</h2>\r\n            <div className=\"row row-cols-1 row-cols-lg-3 align-items-stretch g-4 py-5\">\r\n\r\n                <div className=\"col\">\r\n                    <div className=\"card card-cover h-100 overflow-hidden text-white  rounded-5 shadow-lg\"\r\n                        style={{ backgroundImage: `url('https://images.unsplash.com/photo-1518231365576-99dafdedcd69?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=967&q=80')` }}>\r\n                        <div className=\"d-flex flex-column h-100 p-5 pb-3 text-white text-shadow-1\">\r\n                            <h2 className=\"pt-5 mt-5 mb-4 display-6 lh-1 fw-bold\">Интерактивные пошаговые руководства</h2>\r\n                            <ul className=\"d-flex list-unstyled mt-auto\">\r\n                                <li className=\"me-auto\">\r\n                                    <img src=\"https://github.com/twbs.png\" alt=\"Bootstrap\" width=\"32\" height=\"32\"\r\n                                        className=\"rounded-circle border border-white\" />\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col\">\r\n                    <div className=\"card card-cover h-100 overflow-hidden text-white rounded-5 shadow-lg\"\r\n                        style={{ backgroundImage: `url('https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=967&q=80')` }}>\r\n                        <div className=\"d-flex flex-column h-100 p-5 pb-3 text-white text-shadow-1\">\r\n                            <h2 className=\"pt-5 mt-5 mb-4 display-6 lh-1 fw-bold\">Интенсивные курсы </h2>\r\n                            <ul className=\"d-flex list-unstyled mt-auto\">\r\n                                <li className=\"me-auto\">\r\n                                    <img src=\"https://github.com/twbs.png\" alt=\"Bootstrap\" width=\"32\" height=\"32\"\r\n                                        className=\"rounded-circle border border-white\" />\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col\">\r\n                    <div className=\"card card-cover h-100 overflow-hidden text-white rounded-5 shadow-lg\"\r\n                        style={{ backgroundImage: `url('https://images.pexels.com/photos/4101143/pexels-photo-4101143.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260')` }}>\r\n                        <div className=\"d-flex flex-column h-100 p-5 pb-3 text-white text-shadow-1\">\r\n                            <h2 className=\"pt-5 mt-5 mb-4 display-6 lh-1 fw-bold\">Тесты для проведения оценки </h2>\r\n                            <ul className=\"d-flex list-unstyled mt-auto\">\r\n                                <li className=\"me-auto\">\r\n                                    <img src=\"https://github.com/twbs.png\" alt=\"Bootstrap\" width=\"32\" height=\"32\"\r\n                                        className=\"rounded-circle border border-white\" />\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomCards;","import { Container, Row, Col, Image } from 'react-bootstrap';\r\n\r\nconst SingleFeature = ({ title, titleMuted, para, imageLeft, img }) => {\r\n    return (\r\n        <Container>\r\n            <hr className=\"featurette-divider\" />\r\n            <Row className=\"featurette\">\r\n                <Col lg={7} className={imageLeft && 'order-lg-2'}>\r\n                    <div className=\"d-flex flex-column align-items-center\">\r\n                        <h2 className=\"featurette-heading\">{title}<span className=\"text-muted\">{titleMuted}</span>\r\n                        </h2>\r\n                        <p className=\"lead\">{para}</p>\r\n                    </div>\r\n\r\n                </Col>\r\n                <Col lg={5} className={imageLeft && 'order-md-1'}>\r\n                    {/* <svg className=\"bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto\" width=\"500\"\r\n                        height=\"500\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" aria-label=\"Placeholder: 500x500\"\r\n                        preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\">\r\n                        <title>Placeholder</title>\r\n                        <rect width=\"100%\" height=\"100%\" fill=\"#eee\" /><text x=\"50%\" y=\"50%\" fill=\"#aaa\" dy=\".3em\">500x500</text>\r\n                    </svg> */}\r\n                    <Image rounded src={img} alt={title} className=\" img-fluid mx-auto \" />\r\n                </Col>\r\n            </Row>\r\n            {/* <hr className=\"featurette-divider\" /> */}\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default SingleFeature;","import { useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\"\r\nimport SingleFeature from \"./SingleFeature\";\r\n\r\nconst Featurette = () => {\r\n\r\n    const [featuresContent, setFeatureContent] = useState([{\r\n        title: 'Практикуйтесь. ',\r\n        titleMuted: 'Вместо чтения очередной книги.',\r\n        para: 'Написано множество замечательных книг по психологии, переговорам, публичным выступлениям. Проблема лишь в том, что книга не дает вам навыков. Вы прочитали книгу, узнали новую информацию, но в вашей жизни по-большому счету ничего не изменилось. SoftSkill - это игровая площадка для тренировки ваших навыков. Регулярно делайте упражнения, чтобы увидеть изменения. ',\r\n        img: 'https://images.unsplash.com/photo-1599058917212-d750089bc07e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1049&q=80',\r\n        imageLeft: false\r\n    }, {\r\n        title: 'Научно обоснованные знания. ',\r\n        titleMuted: 'Вместо некомпетентных коучей, психологов и шарлатанов',\r\n        para: 'Ваш коуч заставляет вас читать стихи в метро и бегать голым вокруг собственного дома, чтобы перестать бояться людей? Ваш психоаналитик уже два года копается в ваших историях из детства и отношениях с родителями, но вы не чувствуете прогресса? В наших психологических упражнениях мы используем подходы из научно доказанного направления когнитивно-поведенческой терапии. А упражнения и статьи по другим темам подкрепляем ссылками на мета-анализы и свежие научные исследования.',\r\n        img: 'https://images.pexels.com/photos/7089290/pexels-photo-7089290.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\r\n        imageLeft: true\r\n    }, {\r\n        title: 'Бесплатно. ',\r\n        titleMuted: 'Вместо десятков тысяч рублей за тренинги, кусы и сеансы',\r\n        para: 'Мы хотим, чтобы любой человек мог получить помощь и улучшить свои гибкие навыки. Большинство материалов на платформе бесплатны, а дополнительные модули стоят дешевле, чем один сеанс у психотерапевта',\r\n        img: 'https://images.pexels.com/photos/2599244/pexels-photo-2599244.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\r\n        imageLeft: false\r\n    }])\r\n\r\n\r\n    return (\r\n        <Container className=\"marketing\">\r\n            {featuresContent.map((feature, index) => {\r\n                return (\r\n                    <SingleFeature key={index} {...feature} />\r\n                );\r\n            })}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Featurette;","export default __webpack_public_path__ + \"static/media/inwork.88e7fe1f.png\";","import { Container, Accordion, Row, Col, Image } from \"react-bootstrap\";\r\nimport workImg from '../img/inwork.png'\r\n\r\n\r\nconst Topics = () => {\r\n    return (\r\n        <Container fluid=\"md\">\r\n            <Row className=\"my-5 g-5 justify-content-around align-items-center\">\r\n\r\n                <Col lg={6}>\r\n                    <Image src={workImg} fluid alt=\"work in progress\"></Image>\r\n                </Col>\r\n\r\n                <Col lg={6}>\r\n\r\n                    <h2>Платформа в стадии разработки</h2>\r\n                    <div className=\"text-muted\">\r\n                        <p>В минимальной версии продукта вам доступны два модуля - для работы с негативными мыслями и когнитивными искажениями. </p>\r\n                        <p>В будущем на платформе будут появляться новые упражнения и материалы. В приоритете запуск инструментов когнитивно-поведенческой терапии. </p>\r\n                        <p>Изучите список тем, которые в плане разработки: </p>\r\n                    </div>\r\n\r\n                    <Accordion defaultActiveKey=\"0\">\r\n                        <Accordion.Item eventKey=\"0\">\r\n                            <Accordion.Header>Цели и ценности</Accordion.Header>\r\n                            <Accordion.Body>\r\n                                <ul>\r\n                                    <li>Устанавливайте цели, которых сможете добиться. В этом вам поможет конструктор SMART целей.</li>\r\n                                    <li>Живите в соответствии со своими ценностями. В этом поможет модуль для анализа ценностей и сильных сторон  </li>\r\n                                </ul>\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                        <Accordion.Item eventKey=\"1\">\r\n                            <Accordion.Header>Начните действовать</Accordion.Header>\r\n                            <Accordion.Body>\r\n                                <ul>\r\n                                    <li>Проанализируйте свои паттерны поведения</li>\r\n                                    <li>Составьте план действий</li>\r\n                                    <li>Развивайте навыки решения проблем</li>\r\n                                    <li>Принимайте осознанные решения с помощью анализа плюсов и минусов различных сценарией</li>\r\n                                </ul>\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                        <Accordion.Item eventKey=\"2\">\r\n                            <Accordion.Header>Развивайте навыки эффективных коммуникаций</Accordion.Header>\r\n                            <Accordion.Body>\r\n                                <ul>\r\n                                    <li>Проанализируйте спор с помощью фреймворка EAR: эмпатия, ассертивность и уважение</li>\r\n                                    <li>Подготовьтесь к сложным диалогам</li>\r\n                                    <li>Практикуйте активное слушание</li>\r\n                                    <li>Научитесь задавать правильные вопросы</li>\r\n                                </ul>\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                    </Accordion>\r\n\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Topics;","import { Button, Modal, Form } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst ModalComp = () => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\" onClick={handleShow}>\r\n                Оставить почту\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Узнавайте об обновлениях</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>\r\n                        Подпишитесь, чтобы первыми узнавать о новых модулях. Мы не будем спамить: только новости об обновлениях без рекламы.\r\n                    </p>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Напишите ваш email:</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"Например, mark@mail.ru\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                                Мы никогда не делимся вашими контактами с третьими лицами.\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Закрыть\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Отправить\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalComp;","import { Container, Row, Col } from 'react-bootstrap';\r\nimport ModalComp from '../Components/ModalComp'\r\n\r\n\r\nconst HomeModal = () => {\r\n    return (\r\n        <section className=\"bg-light\">\r\n            <Container >\r\n                <div class=\"text-center\">\r\n                    <h2>Оставайтесь на связи</h2>\r\n                    <p class=\"lead\">Узнавайте о свежих обновлениях самыми первыми </p>\r\n                </div>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col md={8} className=\"text-center\">\r\n                        {/* <p class=\"text-muted my-4\">\r\n                            Подпишитесь, чтобы первыми узнавать о новых модулях. Мы не будем спамить: только новости об обновлениях без рекламы.\r\n                        </p> */}\r\n                        <ModalComp />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </section>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default HomeModal;","import { Container, Row, Col, Button, Card } from \"react-bootstrap\";\r\nimport Hero from '../Components/Hero'\r\nimport CustomCards from \"../Components/CustomCards\";\r\nimport Featurette from \"../Components/Featurette\";\r\nimport Topics from \"../Components/Topics\";\r\nimport HomeModal from \"../Components/HomeModal\"\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <Container fluid className=\"px-0\">\r\n            <Hero />\r\n            <CustomCards />\r\n            <Featurette />\r\n            <Topics />\r\n            <HomeModal />\r\n\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default Home;","import { Container, Row, Col, Button, Card } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useGlobalContext } from \"../context\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Course = () => {\r\n    const { courses } = useGlobalContext();\r\n\r\n    return (\r\n        <>\r\n            {courses.map((course, index) => {\r\n                const courseArticles = course.courseArticles;\r\n\r\n                return (\r\n                    <>\r\n                        <section className=\"bg-light\" key={index}>\r\n                            <Container className=\"text-center\">\r\n                                <Row>\r\n                                    <Col md={10} lg={8} className=\"mx-auto\">\r\n                                        <h1 className=\"fw-light\">{course.courseTitle}</h1>\r\n                                        <p className=\"lead text-muted\">{course.courseDescription}</p>\r\n                                        <p>\r\n                                            <Button className=\"btn btn-primary my-2\">Начать с первого урока</Button>\r\n                                        </p>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        </section>\r\n                        <Container className=\"my-5\">\r\n                            <Row className=\"row-cols-1 row-cols-sm-2 row-cols-md-3 g-3\">\r\n                                {courseArticles.map((article, index) => {\r\n\r\n                                    return (\r\n                                        <Col key={index}>\r\n                                            <Card className=\"card shadow-sm\">\r\n                                                <Card.Img variant=\"top\" src={article.imgLink} />\r\n                                                <Card.Body>\r\n                                                    <Card.Title>\r\n                                                        {article.title}\r\n                                                    </Card.Title>\r\n                                                    <Card.Text>\r\n                                                        {article.engName}\r\n                                                    </Card.Text>\r\n                                                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                        <div className=\"btn-group\">\r\n                                                            <Link className=\"btn btn-sm btn-outline-secondary\" to={`/mental-tools/article/${article.id}`}>Читать</Link>\r\n\r\n                                                            {/* <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Edit</button> */}\r\n                                                        </div>\r\n                                                        <small className=\"text-muted\">9 мин</small>\r\n                                                    </div>\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                            {/* <div className=\"card shadow-sm\">\r\n                                                \r\n                                                <p>{article.title}</p>\r\n\r\n                                                <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"225\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                    role=\"img\" aria-label=\"Placeholder: Thumbnail\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\">\r\n                                                    <title>Placeholder</title>\r\n                                                    <rect width=\"100%\" height=\"100%\" fill=\"#55595c\" /><text x=\"50%\" y=\"50%\" fill=\"#eceeef\"\r\n                                                        dy=\".3em\"></text>\r\n                                                </svg>\r\n\r\n                                                <div className=\"card-body\">\r\n                                                    <p className=\"card-text\">{article.engName}</p>\r\n                                                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                        <div className=\"btn-group\">\r\n                                                            <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Читать</button>\r\n                                                            <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Edit</button>\r\n                                                        </div>\r\n                                                        <small className=\"text-muted\">9 мин</small>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> */}\r\n                                        </Col>\r\n                                    )\r\n                                })}\r\n                            </Row>\r\n                        </Container>\r\n                    </>\r\n                )\r\n\r\n            })}\r\n\r\n\r\n            {/* <Container>\r\n                <Row className=\"row-cols-1 row-cols-sm-2 row-cols-md-3 g-3\">\r\n                    <Col>\r\n                        <div className=\"card shadow-sm\">\r\n                            <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"225\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                                role=\"img\" aria-label=\"Placeholder: Thumbnail\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\">\r\n                                <title>Placeholder</title>\r\n                                <rect width=\"100%\" height=\"100%\" fill=\"#55595c\" /><text x=\"50%\" y=\"50%\" fill=\"#eceeef\"\r\n                                    dy=\".3em\">Thumbnail</text>\r\n                            </svg>\r\n\r\n                            <div className=\"card-body\">\r\n                                <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional\r\n                                    content. This content is a little bit longer.</p>\r\n                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                    <div className=\"btn-group\">\r\n                                        <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">View</button>\r\n                                        <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Edit</button>\r\n                                    </div>\r\n                                    <small className=\"text-muted\">9 mins</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <div className=\"card shadow-sm\">\r\n                            <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"225\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                                role=\"img\" aria-label=\"Placeholder: Thumbnail\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\">\r\n                                <title>Placeholder</title>\r\n                                <rect width=\"100%\" height=\"100%\" fill=\"#55595c\" /><text x=\"50%\" y=\"50%\" fill=\"#eceeef\"\r\n                                    dy=\".3em\">Thumbnail</text>\r\n                            </svg>\r\n\r\n                            <div className=\"card-body\">\r\n                                <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional\r\n                                    content. This content is a little bit longer.</p>\r\n                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                    <div className=\"btn-group\">\r\n                                        <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">View</button>\r\n                                        <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Edit</button>\r\n                                    </div>\r\n                                    <small className=\"text-muted\">9 mins</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <div className=\"card shadow-sm\">\r\n                            <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"225\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                                role=\"img\" aria-label=\"Placeholder: Thumbnail\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\">\r\n                                <title>Placeholder</title>\r\n                                <rect width=\"100%\" height=\"100%\" fill=\"#55595c\" /><text x=\"50%\" y=\"50%\" fill=\"#eceeef\"\r\n                                    dy=\".3em\">Thumbnail</text>\r\n                            </svg>\r\n\r\n                            <div className=\"card-body\">\r\n                                <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional\r\n                                    content. This content is a little bit longer.</p>\r\n                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                    <div className=\"btn-group\">\r\n                                        <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">View</button>\r\n                                        <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Edit</button>\r\n                                    </div>\r\n                                    <small className=\"text-muted\">9 mins</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n\r\n\r\n\r\n\r\n                </Row>\r\n            </Container> */}\r\n\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Course;","import { Container, Row, Col, Image } from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useGlobalContext } from \"../context\";\r\n\r\nconst Article = () => {\r\n    const { courses } = useGlobalContext();\r\n    const { id } = useParams();\r\n    // const [article, setArticle] = useState([]);\r\n    // console.log(courses)\r\n    const articles = courses[0].courseArticles;\r\n    const article = articles.find(article => article.id === id);\r\n\r\n    // useEffect(() => {\r\n    //     const currArticle = articles.find(article => article.id === id);\r\n    //     setArticle(currArticle);\r\n    // })\r\n\r\n    console.log(article);\r\n\r\n    if (article) {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col sm={12} md={10} xl={8}>\r\n                        <section id=\"article\">\r\n                            <h2 class=\"display-4\">{article.title}</h2>\r\n                            <p class=\"lead\">\r\n                                {article.engName}\r\n                            </p>\r\n                            <Image src={article.imgLink} fluid />\r\n                            <p className=\"fs-5 mt-3\">{article.description}</p>\r\n                            <p className=\"fs-5 fw-bold\">Примеры:</p>\r\n\r\n                            <ul>\r\n                                {article.examples.map((example, index) => <li key={index} className=\"fs-5\">{example};</li>)}\r\n                            </ul>\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <Link className=\"btn btn-outline-secondary mt-3 position-relative top-0 end-0\" to={`/mental-tools/course`}>Назад к списку статей</Link>\r\n                            </div>\r\n\r\n                        </section>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className=\"text-center my-5\">К сожалению, статья временно недоступна</h1>\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default Article;","import { Navbar, Container, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <Navbar bg=\"primary\" variant=\"dark\" expand=\"md\" >\r\n            <Container >\r\n                <Navbar.Brand as={Link} to=\"/mental-tools/\" className=\"display-6\">SoftSkillz</Navbar.Brand>\r\n\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n\r\n                        <Nav.Link as={Link} to=\"/mental-tools/\">Главная</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/mental-tools/course\">Курсы</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/mental-tools/guide\">Анализ мыслей</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/mental-tools/notes\">Мои записи</Nav.Link>\r\n\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n\r\n            </Container>\r\n        </Navbar>\r\n\r\n\r\n        //       <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n        //       <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        //       <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        //         <Nav className=\"me-auto\">\r\n        //           <Nav.Link href=\"#home\">Home</Nav.Link>\r\n        //           <Nav.Link href=\"#link\">Link</Nav.Link>\r\n        //           <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n        //             <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n        //             <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n        //             <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n        //             <NavDropdown.Divider />\r\n        //             <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n        //           </NavDropdown>\r\n        //         </Nav>\r\n        //       </Navbar.Collapse>\r\n        //     </Container>\r\n        //   </Navbar>\r\n        // <Nav className=\"justify-content-center\" activeKey=\"/home\">\r\n        //     <Nav.Item>\r\n        //         <Nav.Link href=\"/home\">Active</Nav.Link>\r\n        //     </Nav.Item>\r\n        //     <Nav.Item>\r\n        //         <Nav.Link eventKey=\"link-1\">Link</Nav.Link>\r\n        //     </Nav.Item>\r\n        //     <Nav.Item>\r\n        //         <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\r\n        //     </Nav.Item>\r\n        //     <Nav.Item>\r\n        //         <Nav.Link eventKey=\"disabled\" disabled>\r\n        //             Disabled\r\n        //         </Nav.Link>\r\n        //     </Nav.Item>\r\n        // </Nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Error from './Pages/Error';\nimport Notes from './Pages/Notes';\nimport Note from './Pages/Note';\nimport Guide from \"./Components/Guide\";\nimport Home from './Pages/Home';\nimport Course from './Pages/Course';\nimport Article from './Pages/Article';\nimport Navigation from './Components/Navigation';\n\nfunction App() {\n  return (\n    <Router>\n      <Navigation />\n      <Switch>\n        <Route exact path=\"/mental-tools\">\n          <Home />\n        </Route>\n        <Route exact path=\"/mental-tools/course\">\n          <Course />\n        </Route>\n        <Route exact path=\"/mental-tools/article/:id\" children={<Article />} />\n        <Route exact path=\"/mental-tools/guide\">\n          <Guide />\n        </Route>\n        <Route exact path=\"/mental-tools/notes\">\n          <Notes />\n        </Route>\n        <Route exact path=\"/mental-tools/note/:id\" children={<Note />} />\n\n        <Route path=\"*\">\n          <Error />\n        </Route>\n\n      </Switch>\n    </Router>\n\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { AppProvider } from './context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}